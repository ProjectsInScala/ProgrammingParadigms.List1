1.2 def count [A](aObject:A,aList:List[A]):Int = 
		if (aList==Nil) 0
		else if ((aList head) == aObject) (1+count(aObject,aList tail))
		else count(aObject,aList tail)

1.3 def duplicate [A](aToReply:A,aCounter:Int):List[A] = 
		if (aCounter==0) Nil
		else aToReply::duplicate(aToReply,aCounter-1)

1.4 def sqrList ( aLista:List[Int] ):List[Int] = 
		if (aLista==Nil) Nil
		else ( ( aLista head ) * ( aLista head ) )::sqrList(aLista tail)

1.5 def palindrome (aLista:List[Int]) =  aLista reverse

1.6 def listLength [A](aLista:List[A]):Int =
		if (aLista==Nil) 0
		else 1+listLength(aLista tail)
		
1.7 def listAppend [A](aLista1:List[A], aLista2:List[A]):List[A] =  
		if (aLista1==Nil) aLista2
		else (aLista1 head) :: listAppend(aLista1 tail,aLista2)